openapi: 3.0.0
info:
  title: Positions API (Recruiters)
  description: |-
    This is the specification for the Positions API.
  version: 1.0.0
servers:
  - url: 'http://localhost:8080/positions'
    description: Local server
tags:
  - name: positions-manager
    description: Operations about positions
paths:
  /positions:
    get:
      summary: Find all positions
      description: Returns all positions
      operationId: getAllPositions
      tags:
        - positions-manager
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PositionDTO'
    post:
      summary: Method to create a new position
      description: This method creates a new position with the given body information
      operationId: createPosition
      tags:
        - positions-manager
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionDetailDTO'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionDetailDTO'
        400:
          description: Bad format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorDTO'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorDTO'
  /positions/{positionId}:
    get:
      summary: Find position by ID
      description: Returns a single position
      operationId: getPositionDetail
      tags:
        - positions-manager
      parameters:
        - name: positionId
          in: path
          description: ID of position to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionDetailDTO'
        '400':
          description: Invalid ID supplied
        '404':
          description: Position not found
    put:
      summary: Update a position
      description: Returns a single position
      operationId: updatePosition
      tags:
        - positions-manager
      parameters:
        - name: positionId
          in: path
          description: ID of position to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionDetailDTO'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionDetailDTO'
        400:
          description: Bad format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorDTO'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationErrorDTO'
components:
  schemas:
    PositionDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        title:
          type: string
          example: Software Engineer
        description:
          type: string
          example: This position is for a software engineer
    PositionDetailDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        title:
          type: string
          example: Software Engineer
        description:
          type: string
          example: This position is for a software engineer
        status:
          type: integer
          format: int32
          example: 1
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/RequirementDTO'
        benefits:
          type: array
          items:
            $ref: '#/components/schemas/BenefitDTO'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskDTO'
    RequirementDTO:
      type: object
      properties:
        key:
          type: string
          example: Java
        value:
          type: string
          example: 10 years of experience
        description:
          type: string
          example: The candidate must have a degree in computer science
        isMandatory:
          type: boolean
          example: true
    BenefitDTO:
      type: object
      properties:
        description:
          type: string
          example: 23 days of vacation
    TaskDTO:
      type: object
      properties:
        description:
          type: string
          example: Design technical solutions
    ApplicationErrorDTO:
      type: object
      properties:
        applicationId:
          type: string
          description: The ID of the application
          example: 0181b9de-2a43-40cb-a2fc-ca58b62f4658
        errorCode:
          type: string
          description: The error code
          example: 0001
      required:
        - errorCode
