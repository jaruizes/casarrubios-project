# generated by fastapi-codegen:
#   filename:  resources/applications-service-openapi.yaml
#   timestamp: 2025-02-28T10:46:23+00:00

from __future__ import annotations

from typing import List, Optional
from uuid import UUID

from pydantic import BaseModel, Field

class SkillDTO(BaseModel):
    skill: str
    level: str

class ResumeAnalysisDTO(BaseModel):
    summary: str
    strengths: List[str]
    concerns: List[str]
    hardSkills: List[SkillDTO]
    softSkills: List[SkillDTO]
    keyResponsibilities: List[str]
    interviewQuestions: List[str]
    totalYearsExperience: int
    averagePermanency: float
    tags: List[str]

class ScoringDTO(BaseModel):
    score: float
    descScore: float
    requirementScore: float
    tasksScore: float
    timeSpent: float

class CandidateDTO(BaseModel):
    name: str
    email: str
    phone: str


class ApplicationDTO(BaseModel):
    applicationId: UUID
    candidate: CandidateDTO
    positionId: int
    cvFile: str
    creationDate: str = Field()
    analysis: Optional[ResumeAnalysisDTO] = None
    scoring: Optional[ScoringDTO] = None

    def add_analysis(self, analysis: ResumeAnalysisDTO):
        self.analysis = analysis

    def add_scoring(self, scoring: ScoringDTO):
        self.scoring = scoring


class PaginatedApplicationsDTO(BaseModel):
    applications: Optional[List[ApplicationDTO]] = None
    totalElements: Optional[int] = Field(
        None, description='Total number of applications available'
    )
    totalPages: Optional[int] = Field(None, description='Total number of pages')
    size: Optional[int] = Field(None, description='Number of elements per page')
    number: Optional[int] = Field(None, description='Current page number')
