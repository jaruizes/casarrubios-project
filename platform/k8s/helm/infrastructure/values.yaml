# Default values for infrastructure Helm chart

# Global settings
global:
  storageClass: standard
  namespace: infrastructure

# PostgreSQL configuration
postgresql:
  enabled: true
  image:
    repository: postgres
    tag: "14"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 5432
  persistence:
    enabled: true
    size: 1Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  env:
    POSTGRES_PASSWORD: postgres
    POSTGRES_USER: postgres
    POSTGRES_DB: applications

# PgAdmin configuration
pgadmin:
  enabled: true
  image:
    repository: dpage/pgadmin4
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: false
    className: nginx
    host: pgadmin.local
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  env:
    PGADMIN_DEFAULT_EMAIL: admin@admin.com
    PGADMIN_DEFAULT_PASSWORD: admin

# Qdrant configuration
qdrant:
  enabled: true
  image:
    repository: qdrant/qdrant
    tag: v1.13.6
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    ports:
      http: 6333
      grpc: 6334
  persistence:
    enabled: true
    size: 1Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# MinIO configuration
minio:
  enabled: true
  image:
    repository: quay.io/minio/minio
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    apiPort: 9000
    consolePort: 9001
  persistence:
    enabled: true
    size: 5Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  env:
    MINIO_ROOT_USER: minioadmin
    MINIO_ROOT_PASSWORD: minioadmin

# Zookeeper configuration
zookeeper:
  enabled: true
  image:
    repository: confluentinc/cp-zookeeper
    tag: 7.5.0
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 2181
  persistence:
    enabled: true
    size: 1Gi
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  env:
    ZOOKEEPER_CLIENT_PORT: 2181
    ZOOKEEPER_TICK_TIME: 2000

# Kafka broker configuration
broker:
  enabled: true
  image:
    repository: confluentinc/cp-kafka
    tag: 7.5.0
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    ports:
      internal: 29092
      external: 9092
      jmx: 9101
  persistence:
    enabled: true
    size: 5Gi
  resources:
    requests:
      memory: "512Mi"
      cpu: "200m"
    limits:
      memory: "1Gi"
      cpu: "1000m"
  env:
    KAFKA_BROKER_ID: 1
    KAFKA_ZOOKEEPER_CONNECT: "infrastructure-zookeeper:2181"
    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://infrastructure-broker:29092,PLAINTEXT_HOST://infrastructure-broker:9092
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
    KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
    KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

# Kafka UI configuration
kafkaui:
  enabled: true
  image:
    repository: provectuslabs/kafka-ui
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8001
  ingress:
    enabled: false
    className: nginx
    host: kafka-ui.local
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  env:
    SERVER_PORT: 8001
    KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "infrastructure-broker:29092"
    KAFKA_CLUSTERS_0_ZOOKEEPER: "infrastructure-zookeeper:2181"
    KAFKA_CLUSTERS_0_NAME: local

# CDC Service configuration
cdcservice:
  enabled: true
  image:
    repository: ghcr.io/jaruizes/infrastructure/cdc-service
    tag: 1.0.0
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8083
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  env:
    KAFKA_LOG4J_OPTS: -Dlog4j.configuration=file:/opt/kafka/config/connect-log4j.properties
    KAFKA_CONNECT_BOOTSTRAP_SERVERS: infrastructure-broker:29092
    KAFKA_CONNECT_CONFIGURATION: |
      key.converter=org.apache.kafka.connect.storage.StringConverter
      value.converter=org.apache.kafka.connect.json.JsonConverter
      key.converter.schemas.enable=false
      value.converter.schemas.enable=false
      group.id=debezium-connect
      offset.storage.topic=connect-offsets
      offset.storage.replication.factor=1
      config.storage.topic=connect-configs
      config.storage.replication.factor=1
      status.storage.topic=connect-status
      status.storage.replication.factor=1
      producer.interceptor.classes=io.debezium.tracing.DebeziumTracingProducerInterceptor
    OTEL_SERVICE_NAME: cdc-service
    OTEL_TRACES_EXPORTER: otlp
    OTEL_METRICS_EXPORTER: none
    OTEL_EXPORTER_OTLP_ENDPOINT: http://infrastructure-otel-collector:4317
    OTEL_TRACES_SAMPLER: always_on
    STRIMZI_TRACING: opentelemetry

# OpenTelemetry Collector configuration
otelcollector:
  enabled: true
  image:
    repository: otel/opentelemetry-collector
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    ports:
      grpc: 4317
      http: 4318
      health: 13133
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  config:
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:
      batch:
    exporters:
      otlp:
        endpoint: infrastructure-jaeger:4317
        tls:
          insecure: true
    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp]

# Jaeger configuration
jaeger:
  enabled: true
  image:
    repository: jaegertracing/jaeger
    tag: 2.4.0
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 16686
  ingress:
    enabled: false
    className: nginx
    host: jaeger.local
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  env:
    LOG_LEVEL: debug
