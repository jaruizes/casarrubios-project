name: (Base) Spring Services

on:
  workflow_call:
    inputs:
      service-path:
        required: true
        type: string
      domain:
        required: true
        type: string
      service-name:
        required: true
        type: string


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      SPRING_AI_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    defaults:
      run:
        working-directory: ${{ inputs.service-path }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Extract version from pom.xml
        id: extract_version
        run: |
          VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build, analysis and package
        run: ./mvnw clean package -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ inputs.service-name }} -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=casarrubios-project -DskipPitest

      - name: Prepare Docker build context
        run: |
          mkdir -p target/dependency
          (cd target/dependency && jar -xf ../*.jar)

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ inputs.domain }}/${{ inputs.service-name }}:${{ steps.extract_version.outputs.VERSION }} .

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ inputs.domain }}/${{ inputs.service-name }}:${{ steps.extract_version.outputs.VERSION }}
  
